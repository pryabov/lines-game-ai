@use 'index' as *;

.game {
  @include flex(column, center, center);
  padding: clamp(8px, 2vw, 20px);
  font-family: 'Arial', sans-serif;
  max-width: 100%;
  width: clamp(350px, 90vw, 700px);
  margin: 0 auto;
  position: relative;
  @include border-radius('large');
  @include box-shadow('light');
  background-color: var(--bg-primary, $white);

  &-info {
    @include flex(row, space-between, start);
    width: 100%;
    margin-bottom: clamp(5px, 2vw, 10px);
    gap: clamp(8px, 2vw, 16px);
    max-width: 100%;
    background-color: var(--bg-secondary, $bg-light-secondary);
    @include border-radius;
    border: 1px solid var(--border-color, $border-light-alt);
    @include box-shadow('normal');
    padding: clamp(6px, 1.5vw, 10px);
  }
  
  &-bottom {
    width: 100%;
    @include flex-center;
    margin-top: clamp(5px, 2vw, 10px);
    gap: 10px;
  }
  
  /* Responsive adjustments */
  @include mobile {
    padding: 10px;
    
    &-info {
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      gap: 4px;
    }
  }
}

/* New container for game info and board */
.game-content {
  @include flex(column, center, center);
  width: 100%;
  max-width: calc(9 * var(--cell-size) + 4px);
  margin: 0 auto;
}

.score-container {
  @include flex(row, center, center);
  gap: 20px;
}

.score, .high-score {
  @include flex(column, center, center);
  padding: clamp(4px, 1vw, 12px);
  background-color: transparent;
  border: none;
  border-radius: 0;
  @include box-shadow('none');
  flex: 0 0 22%;
  margin-top: 8px;
  
  @include mobile {
    width: auto;
    max-width: none;
    margin: 0;
    flex-basis: 28%;
    padding: 4px;
    
    &-label {
      font-size: 12px;
      margin-bottom: 2px;
    }
    
    &-value {
      font-size: 12px;
    }
  }
  
  &-label {
    font-weight: bold;
    font-size: clamp(12px, 2vw, 16px);
    color: var(--text-primary, $text-dark);
    margin-bottom: 5px;
  }
  
  &-value {
    font-size: clamp(18px, 4vw, 24px);
    font-weight: bold;
  }
}

.score {
  &-value {
    color: var(--text-primary, $text-dark);
  }
}

.high-score {
  &-value {
    color: var(--text-primary, $text-dark);
  }
}

.reset-button {
  @include button-danger;
  padding: 8px 24px; // Override base padding
  text-align: center;
  font-size: clamp(12px, 2vw, 16px);
  margin-top: 10px;
  
  &:disabled {
    background-color: var(--disabled-color, $disabled-bg-light);
    color: var(--disabled-text, $disabled-text-light);
    cursor: not-allowed;
    transform: none;
  }
}

.help-button {
  @include button-primary;
  padding: 8px 24px; // Match reset button padding
  text-align: center;
  font-size: clamp(12px, 2vw, 16px);
  margin-top: 10px;
}

.board-container {
  position: relative;
  margin: 0 auto;
  width: 100%;
  @include flex-center;
  /* Prevent transform scaling in Board.scss from affecting parent container layout */
  transform-origin: center;
  min-width: calc(9 * var(--cell-size) + 4px); /* Account for border width (2px * 2) */
  margin-bottom: 0;
}