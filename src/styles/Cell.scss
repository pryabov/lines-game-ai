@use 'index' as *;
@use "sass:list";

.cell {
  width: var(--cell-size);
  height: var(--cell-size);
  border: 1px solid $border-light;
  @include flex-center;
  cursor: pointer;
  background-color: $gray-medium-light;
  position: relative;
  @include transition(background-color);
  
  &:hover {
    background-color: $gray-darkish;
    
    .ball-inner {
      transform: scale(1.05);
    }
  }
  
  &.selected {
    background-color: $accent-blue-light;
    
    .ball-inner {
      @include animate(selectedBallJump, 0.8s, ease-in-out, infinite);
      box-shadow: 0 0 10px rgba($white, 0.8), inset -3px -3px 5px rgba($black, 0.3);
    }
  }
  
  &.ball {
    position: relative;
  }
  
  /* Path animation */
  &.path {
    background-color: $accent-blue-light;
    @include transition(background-color, 0.3s);
  }
  
  /* Styling for different steps of the path */
  @for $i from 1 through 10 {
    &.path-step-#{$i} { 
      @include animate(pathAppear, 0.3s, ease-in-out);
      @include animation-delay($i * 0.05s);
      
      .path-dot { 
        @include animation-delay($i * 0.1s);
      }
    }
  }
  
  /* Line completion animation */
  &.line-complete {
    .ball-inner {
      animation: lineCompleteFlash 0.5s ease-in-out 2, lineCompleteDisappear 0.8s ease-in-out 1s forwards;
    }
  }
  
  /* Special animation for each ball in the line based on position */
  @for $i from 1 through 9 {
    &.line-pos-#{$i} {
      .ball-inner { 
        @include animation-delay(($i - 1) * 0.1s, 1s + ($i - 1) * 0.1s);
      }
    }
  }
}

.ball-inner {
  width: var(--ball-size);
  height: var(--ball-size);
  @include ball-style;
}

/* Ensure next-balls styling takes precedence */
.next-ball .ball-inner {
  width: 100%;
  height: 100%;
  max-width: 100%;
  max-height: 100%;
}

/* Ball colors - using map from _variables.scss */
@each $color, $gradient in $ball-colors {
  .ball-#{$color} .ball-inner {
    background: radial-gradient(circle at 30% 30%, list.nth($gradient, 1), list.nth($gradient, 2));
  }
  
  .ball-#{$color}-inner {
    background: radial-gradient(circle at 30% 30%, list.nth($gradient, 1), list.nth($gradient, 2));
  }
}

.path-dot {
  width: 10px;
  height: 10px;
  @include border-radius('circle');
  background-color: $accent-blue-lighter;
  @include animate(pulse, 1s, ease-in-out, infinite);
}

/* Ball animation */
.ball-animated .ball-inner {
  @include animate(moveAlongPath, 0.5s);
}

/* Ball moving animation */
.moving-ball {
  position: absolute;
  @include border-radius('circle');
  z-index: 9999;
  transition: left 0.25s ease-in-out, top 0.25s ease-in-out;
  @include box-shadow('heavy');
  pointer-events: none;
  
  .ball-inner {
    width: 100%;
    height: 100%;
    @include border-radius('circle');
    @include box-shadow('inset');
    position: relative;
  }
  
  &.jumping {
    z-index: 9999;
    box-shadow: none !important;
    
    .ball-inner {
      @include animate(jumpBall, 0.3s);
      box-shadow: none !important;
    }
  }
} 